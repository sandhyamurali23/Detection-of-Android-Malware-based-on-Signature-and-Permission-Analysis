package com.example.sandhyamurali.samplefirstapp;

import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.method.ScrollingMovementMethod;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.ExecutionException;

public class MainActivity extends AppCompatActivity  implements View.OnClickListener {

    private Button ButtonStart;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ButtonStart = (Button) findViewById(R.id.buttonStart) ;

        ButtonStart.setOnClickListener(this);




    }



    @Override
    public void onClick(View v) {

        PackageManager pkg = getPackageManager();
        List<PackageInfo> appinstall = pkg.getInstalledPackages(PackageManager.GET_PERMISSIONS | PackageManager.GET_PROVIDERS);
        List<ApplicationInfo> packagesinfo = pkg.getInstalledApplications(PackageManager.GET_META_DATA);
        PackageInfo packageInfo=null;

        try
        {
            packageInfo = pkg.getPackageInfo(getPackageName(), PackageManager.GET_SIGNATURES);
        }
        catch (PackageManager.NameNotFoundException e)
        {
            e.printStackTrace();
        }


        List<ApplicationInfo> OnlyInstalledApps=new ArrayList<>();

        for(ApplicationInfo apps:packagesinfo)
        {

            if ((ApplicationInfo.FLAG_SYSTEM & apps.flags) != 0 || apps.packageName.equals(packageInfo.packageName)) //preinstalled applications or self
            {
                continue;
            }

            else
            {
                OnlyInstalledApps.add(apps);
            }


        }


        //String res="";
        List<AppDetails> InstalledApps=new ArrayList<>();

        for(int i=0;i<OnlyInstalledApps.size();i++)
        {
            for(final PackageInfo apps:appinstall)
            {
                if(apps.packageName.equals(OnlyInstalledApps.get(i).packageName))
                {
                    String[] permissions=apps.requestedPermissions;
                    ArrayList<String> PermissionsArrayList = new ArrayList<String>(Arrays.asList(permissions));

                    boolean DangerousPermissions=false;
                    boolean LeakPrivateData=false;
                    boolean GetPrivateData=false;
                    boolean InPlayStore = false;

                    if(PermissionsArrayList.contains("android.permission.READ_PHONE_STATE") ||  PermissionsArrayList.contains("android.permission.READ_EXTERNAL_STORAGE") ||
                            PermissionsArrayList.contains("android.permission.WRITE_EXTERNAL_STORAGE") || PermissionsArrayList.contains("android.permission.CAMERA") ||
                            PermissionsArrayList.contains("android.permission.READ_SMS"))
                        DangerousPermissions=true;

                    if(PermissionsArrayList.contains("android.permission.INTERNET"))
                        LeakPrivateData=true;

                    if(DangerousPermissions)
                        GetPrivateData=true;


                   CheckIfPresentInPlayStore IfPresentInPlayStore=new CheckIfPresentInPlayStore(apps.packageName);
                   try
                   {
                       String present=IfPresentInPlayStore.execute().get();

                       if(present.equals("true"))
                           InPlayStore=true;
                       else
                           InPlayStore=false;

                   }

                   catch (Exception e)
                   {
                       e.printStackTrace();
                   }



                AppDetails appDetails=new AppDetails(DangerousPermissions,LeakPrivateData,GetPrivateData,apps.packageName, PermissionsArrayList,InPlayStore);
                    InstalledApps.add(appDetails);
                    //Log.e("permissions",arrayList.toString());

                    break;


                }
            }
        }


        String collusions="";
        String ColludedApplications="";
        ColludedApplications+="\n";

        for(AppDetails application1:InstalledApps)
        {
            collusions="    "+"<i>"+application1.PackageName+"</i>"+"<br>"+"<br>";
            int index=1;
            for(AppDetails application2 :InstalledApps)
            {
                if(!application1.PackageName.equals(application2.PackageName))
                {
                    if((application1.LeakPrivateData && application2.GetPrivateData && !application1.GetPrivateData && !application2.LeakPrivateData ) ||
                            (application2.LeakPrivateData && application1.GetPrivateData && !application2.GetPrivateData && !application1.LeakPrivateData))
                    {
                        collusions+="   "+Integer.toString(index++)+".   "+application2.PackageName+"<br>"+"<br>";

                        if(application1.InPlayStore && application2.InPlayStore)
                        {
                            GetRating rating_application1=new GetRating(application1.PackageName);
                            GetRating rating_application2=new GetRating(application2.PackageName);

                            try
                            {
                                String RatingApplication1 = rating_application1.execute().get();
                                String RatingApplication2=rating_application2.execute().get();


                                if(Double.valueOf(RatingApplication1)<4 && Double.valueOf(RatingApplication2)<4)
                                {
                                    //ModeratelyLikelyColluded+=collusions;
                                    application1.ModeratelyLikelyColluded.add(application2.PackageName);
                                }

                                else if(Double.valueOf(RatingApplication1)<4 || Double.valueOf(RatingApplication2)<4)
                                {
                                    //LessLikelyColluded+=collusions;
                                    application1.LessLikelyColluded.add(application2.PackageName);
                                }


                            }
                            catch (InterruptedException | ExecutionException e)
                            {
                                e.printStackTrace();
                            }

                        }

                        else if(application1.InPlayStore && !application2.InPlayStore)
                        {
                            GetRating rating_application1=new GetRating(application1.PackageName);

                            try
                            {
                                String RatingApplication1 = rating_application1.execute().get();

                                if(Double.valueOf(RatingApplication1)<4)
                                {
                                    //MostLikelyColluded+=collusions;
                                    application1.MostLikelyColluded.add(application2.PackageName);
                                }

                                else
                                {
                                    //ModeratelyLikelyColluded+=collusions;
                                    application1.ModeratelyLikelyColluded.add(application2.PackageName);
                                }


                            }
                            catch (InterruptedException | ExecutionException e)
                            {
                                e.printStackTrace();
                            }

                        }

                        else if(!application1.InPlayStore && application2.InPlayStore)
                        {
                            GetRating rating_application2=new GetRating(application2.PackageName);

                            try
                            {
                                String RatingApplication2 = rating_application2.execute().get();

                                if(Double.valueOf(RatingApplication2)<4)
                                {
                                    //MostLikelyColluded+=collusions;
                                    application1.MostLikelyColluded.add(application2.PackageName);
                                }

                                else
                                {
                                    //ModeratelyLikelyColluded+=collusions;
                                    application1.ModeratelyLikelyColluded.add(application2.PackageName);
                                }


                            }
                            catch (InterruptedException | ExecutionException e)
                            {
                                e.printStackTrace();
                            }
                        }

                        else if(!application1.InPlayStore && !application2.InPlayStore)
                        {
                            //MostLikelyColluded+=collusions;
                            application1.MostLikelyColluded.add(application2.PackageName);
                        }

                    }
                }
            }

            if(collusions.equals("    "+"<i>"+application1.PackageName+"</i>"+"<br>"+"<br>"))
            {
                collusions +="None" + "<br>"+"<br>";
                //NoCollusions+=collusions;
                application1.NoCollisions ="None";
            }



        }

        String LessLikelyColluded="<b>"+"##########"+"Less Likely Colluded"+"###########"+"</b>"+"<br>"+"<br>";
        String ModeratelyLikelyColluded="<b>"+"##########"+"Moderately Likely Colluded"+"##########"+"</b>"+"<br>"+"<br>";
        String MostLikelyColluded="<b>"+"##########"+"Most Likely Colluded"+"##########"+"</b>"+"<br>"+"<br>";
        String NoCollusions="<b>"+"##########"+"No Collusions"+"##########"+"</b>"+"<br>"+"<br>";

        int counter=1;
        for(AppDetails application1:InstalledApps)
        {
            if(application1.NoCollisions.equals("None"))
            {

                NoCollusions+="    "+Integer.toString(counter++)+".   "+application1.PackageName+"<br>"+"<br>";
                //NoCollusions+="-----------------------------------------------------------------------------------------" + "<br>" + "<br>";
                continue;
            }

            else {
                if (application1.LessLikelyColluded.size() > 0)
                    LessLikelyColluded += "    " + "<i><font color='#EE0000'>" + application1.PackageName + "</i></font>" + "<br>" + "<br>";

                if (application1.ModeratelyLikelyColluded.size() > 0)
                    ModeratelyLikelyColluded += "    " + "<i><font color='#EE0000'>" + application1.PackageName + "</i></font>" + "<br>" + "<br>";

                if (application1.MostLikelyColluded.size() > 0)
                    MostLikelyColluded += "    " + "<i><font color='#EE0000'>" + application1.PackageName + "</i></font>" + "<br>" + "<br>";


                int index = 1;
                for (int i = 0; i < application1.LessLikelyColluded.size(); i++) {
                    LessLikelyColluded += "   " + Integer.toString(index++) + ".   " + application1.LessLikelyColluded.get(i) + "<br>" + "<br>";
                }

                if (application1.LessLikelyColluded.size() > 0)
                    LessLikelyColluded += "-----------------------------------------------------------------------------------------" + "<br>" + "<br>";

                index = 1;
                for (int i = 0; i < application1.ModeratelyLikelyColluded.size(); i++) {
                    ModeratelyLikelyColluded += "   " + Integer.toString(index++) + ".   " + application1.ModeratelyLikelyColluded.get(i) + "<br>" + "<br>";
                }

                if (application1.ModeratelyLikelyColluded.size() > 0)

                    ModeratelyLikelyColluded += "-----------------------------------------------------------------------------------------" + "<br>" + "<br>";

                index = 1;

                for (int i = 0; i < application1.MostLikelyColluded.size(); i++) {
                    MostLikelyColluded += "   " + Integer.toString(index++) + ".   " + application1.MostLikelyColluded.get(i) + "<br>" + "<br>";
                }

                if (application1.MostLikelyColluded.size() > 0)
                    MostLikelyColluded += "-----------------------------------------------------------------------------------------" + "<br>" + "<br>";

                if (LessLikelyColluded.equals("<b>" + "##########" + "Less Likely Colluded" + "###########" + "</b>" + "<br>" + "<br>")) {
                    LessLikelyColluded += "None" + "<br>" + "<br>";
                    //LessLikelyColluded += "--------------------------------------------------------------------" + "<br>" + "<br>";
                }

                if (ModeratelyLikelyColluded.equals("<b>" + "##########" + "Moderately Likely Colluded" + "##########" + "</b>" + "<br>" + "<br>")) {
                    ModeratelyLikelyColluded += "None" + "<br>" + "<br>";
                    //ModeratelyLikelyColluded += "--------------------------------------------------------------------" + "<br>" + "<br>";
                }

                if (MostLikelyColluded.equals("<b>" + "##########" + "No Collusions" + "##########" + "</b>" + "<br>" + "<br>")) {
                    MostLikelyColluded += "None" + "<br>" + "<br>";
                   // MostLikelyColluded += "--------------------------------------------------------------------" + "<br>" + "<br>";

                }
            }
        }

        ColludedApplications+=NoCollusions+"<br>"+LessLikelyColluded+"<br>"+ModeratelyLikelyColluded+"<br>"+MostLikelyColluded+"<br>";

        Intent intent = new Intent(getApplicationContext(), DisplayColludedApplications.class);
        intent.putExtra("message", ColludedApplications);
        startActivity(intent);



        //Log.e("apps",res);



        /*
        List<AppDetails> InstalledApps=new ArrayList<AppDetails>();

        for(PackageInfo apps:appinstall)
        {
            if(appinstall)
        }

        */



    }

    class AppDetails
    {

        boolean DangerousPermissions;
        boolean LeakPrivateData;
        boolean GetPrivateData;
        String PackageName;
        List<String> PermissionList;
        boolean InPlayStore;
        List<String> LessLikelyColluded=new ArrayList<>();
        List<String> ModeratelyLikelyColluded=new ArrayList<>();
        List<String> MostLikelyColluded=new ArrayList<>();
        String NoCollisions="";

        //PackageInfo PackageDetails;

        AppDetails(boolean DangerousPermissions,boolean LeakPrivateData,boolean GetPrivateData,String PackageName,List<String>PermissionList,boolean InPlayStore)
        {
            this.DangerousPermissions=DangerousPermissions;
            this.LeakPrivateData=LeakPrivateData;
            this.GetPrivateData=GetPrivateData;
            this.PackageName=PackageName;
            this.PermissionList=PermissionList;
            this.InPlayStore=InPlayStore;
        }
    }


}
