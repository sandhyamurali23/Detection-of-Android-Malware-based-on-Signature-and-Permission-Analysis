package com.example.sandhyamurali.clientsocket;

import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.text.method.ScrollingMovementMethod;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.Serializable;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;


public class MainActivity extends AppCompatActivity {

    TextView textResponse;
    EditText editTextAddress, editTextPort;
    Button buttonConnect;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        editTextAddress = (EditText) findViewById(R.id.address);
        editTextPort = (EditText) findViewById(R.id.port);
        buttonConnect = (Button) findViewById(R.id.connect);
        textResponse = (TextView) findViewById(R.id.response);
        textResponse.setMovementMethod(new ScrollingMovementMethod());
        buttonConnect.setOnClickListener(buttonConnectOnClickListener);

    }

    View.OnClickListener buttonConnectOnClickListener = new View.OnClickListener() {

        @Override
        public void onClick(View arg0) {

            MyClientTask myClientTask = new MyClientTask(editTextAddress
                    .getText().toString(), Integer.parseInt(editTextPort
                    .getText().toString()));
            myClientTask.execute();
        }
    };

    public class MyClientTask extends AsyncTask<Void, Void,Void> {

        String dstAddress;
        int dstPort;
        String response = "";
        String msgToServer;

        MyClientTask(String addr, int port) {
            dstAddress = addr;
            dstPort = port;
        }

        @Override
        protected Void doInBackground(Void... arg0) {

                Socket socket = null;
                DataOutputStream dataOutputStream = null;
                DataInputStream dataInputStream = null;

                //ObjectOutputStream oos=null;
                //ObjectInputStream ois=null;

                PackageManager pkg = getPackageManager();
                List<PackageInfo> signatures = pkg.getInstalledPackages(PackageManager.GET_SIGNATURES);
                List<ApplicationInfo> packages = pkg.getInstalledApplications(PackageManager.GET_META_DATA);

                PackageInfo packageInfo=null;


                try
                {
                    packageInfo = pkg.getPackageInfo(getPackageName(), PackageManager.GET_SIGNATURES);
                }
                catch (PackageManager.NameNotFoundException e)
                {
                    e.printStackTrace();
                }


                List<ApplicationInfo> installedapps=new ArrayList<>();

                for(ApplicationInfo apps:packages) {

                    if ((ApplicationInfo.FLAG_SYSTEM & apps.flags) != 0 || apps.packageName.equals(packageInfo.packageName) ||
                            apps.packageName.equals("com.example.sandhyamurali.serversocket")
                            || apps.packageName.equals("com.example.sandhyamurali.installplaystoreapps")) //preinstalled applications or self
                    {
                        continue;
                    }

                    else
                    {
                        installedapps.add(apps);
                    }

                }

                List<AppDetails> appdetailslist=new ArrayList<>();
                for(PackageInfo pinfo:signatures)
                {
                    for(ApplicationInfo apps:installedapps)
                    {
                        if(pinfo.packageName.equals(apps.packageName))
                        {
                            Signature[] sig=pinfo.signatures;

                            int hashcode=0;
                            for(Signature signature:sig)
                            {
                                hashcode = signature.hashCode();
                            }

                            AppDetails details=new AppDetails(hashcode,pinfo.packageName);
                            appdetailslist.add(details);
                            break;
                        }
                    }
                }



                try {
                    socket = new Socket(dstAddress, dstPort);

                    //oos=new ObjectOutputStream(socket.getOutputStream());
                    //ois=new ObjectInputStream(socket.getInputStream());


                    //oos.writeObject("hello server");

                    //String r=(String)ois.readObject();

                    //response=r;



                    dataOutputStream = new DataOutputStream(
                           socket.getOutputStream());
                    dataInputStream = new DataInputStream(socket.getInputStream());

                    String res="";

                    for(AppDetails apps:appdetailslist)
                    {
                        res=res+apps.packagename+","+apps.signature+" ";
                    }

                    res.trim();


                    msgToServer=res;

                   if(msgToServer != null){
                       dataOutputStream.writeUTF(msgToServer);
                    }

                    String r = dataInputStream.readUTF();
                    String[] split_response=r.split("-");
                    String[] safeApps=split_response[0].split(" ");
                    String[] unsafeApps=split_response[1].split(" ");

                    response+="List of Safe applications : "+"\n"+"\n";

                    if(safeApps.length==1 && safeApps[0].equals("None"))
                    {
                        response+="None"+"\n";
                    }

                    else
                    {
                        for(int i=0;i<safeApps.length;i++)
                        {
                            response+=""+(i+1)+"        "+safeApps[i]+"\n";
                        }
                    }

                    response+="\n"+"\n";

                    response+="List of Unsafe applications : "+"\n"+"\n";

                    if(unsafeApps.length==1 && unsafeApps[0].equals("None"))
                    {
                        response+="None"+"\n";
                    }

                    else
                    {
                        for(int i=0;i<unsafeApps.length;i++)
                        {
                            response+=""+(i+1)+"        "+unsafeApps[i]+"\n";
                        }
                    }




                } catch (UnknownHostException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                    response = "UnknownHostException: " + e.toString();
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                    response = "IOException: " + e.toString();
                }  finally {
                    if (socket != null) {
                        try {
                            socket.close();
                        } catch (IOException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                    }

                    if (dataOutputStream != null) {
                        try {
                            dataOutputStream.close();
                        } catch (IOException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                    }

                    if (dataInputStream != null) {
                        try {
                            dataInputStream.close();
                        } catch (IOException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                    }

                    /*
                    if (oos != null) {
                        try {
                            oos.close();
                        } catch (IOException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                    }

                    if (ois != null) {
                        try {
                            ois.close();
                        } catch (IOException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                    }

                    */
                }
                return null;
        }

        @Override
        protected void onPostExecute(Void result) {
            textResponse.setText(response);
            super.onPostExecute(result);
        }

        class AppDetails implements Serializable
        {
            int signature;
            String packagename;

            AppDetails(int signature, String packagename)
            {

                this.signature=signature;
                this.packagename=packagename;
            }
        }


    }


}
